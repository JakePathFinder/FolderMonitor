version: '3.4'

services:
  filelistener:
    image: ${DOCKER_REGISTRY-}filelistener
    build:
      context: .
      dockerfile: FileListener/Dockerfile
    volumes:
      - ${CERTIFICATE_FOLDER}:/app/devcerts
      - shared_services_volume:/data/shared
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
    ports:
      - "${FILE_LISTENER_HTTP_PORT}:80"
      - "${FILE_LISTENER_HTTPS_PORT}:443"
    depends_on:
      - eventmanager
      - varonisrmq
      - redis

  eventmanager:
    image: ${DOCKER_REGISTRY-}eventmanager
    build:
      context: .
      dockerfile: EventManager/Dockerfile
    volumes:
      - ${CERTIFICATE_FOLDER}:/app/devcerts
      - shared_services_volume:/data/shared
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
    ports:
      - "${EVENT_HANDLER_HTTP_PORT}:80"
      - "${EVENT_HANDLER_HTTPS_PORT}:443"
    depends_on:
      - varonisrmq
      - redis

  varonisrmq:
    image: rabbitmq:management
    hostname: varonisrmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ${RABBITMQ_DATA_FOLDER}/rabbitmqdata:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    
  redis:
    image: redis:7.0.12-alpine3.18
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ${CERTIFICATE_FOLDER}:/app/devcerts
volumes:
  redis-data:
  shared_services_volume:
